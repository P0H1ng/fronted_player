{"remainingRequest":"/home/kali/fronted_player/node_modules/babel-loader/lib/index.js!/home/kali/fronted_player/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/kali/fronted_player/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kali/fronted_player/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/fronted_player/src/components/Timer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/fronted_player/src/components/Timer.vue","mtime":1725528217781},{"path":"/home/kali/fronted_player/node_modules/cache-loader/dist/cjs.js","mtime":1718176688802},{"path":"/home/kali/fronted_player/node_modules/babel-loader/lib/index.js","mtime":1718176688789},{"path":"/home/kali/fronted_player/node_modules/vuetify-loader/lib/loader.js","mtime":1718176689266},{"path":"/home/kali/fronted_player/node_modules/cache-loader/dist/cjs.js","mtime":1718176688802},{"path":"/home/kali/fronted_player/node_modules/vue-loader/lib/index.js","mtime":1718176689251}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUaW1lciIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVyOiBudWxsLAogICAgICByZXF1ZXN0VGltZXI6IG51bGwsCiAgICAgIHRpbWU6IG51bGwsCiAgICAgIHllYXI6IDAsCiAgICAgIG1vbnRoOiAwLAogICAgICBkYXk6IDAsCiAgICAgIGhvdXI6IDAsCiAgICAgIG1pbnV0ZTogMCwKICAgICAgc2Vjb25kOiAwCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0VGltZSgpOwogICAgdGhpcy5yZXF1ZXN0VGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLmdldFRpbWUsIDEwMDAwKTsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLnRpbWVUaWNrLCAxMDAwKTsKICAgIHRoaXMudXBkYXRlVGltZSgpOyAvLyDliJ3lp4vljJbmmYLlhYjpoa/npLrkuIDmrKHnlbbliY3mmYLplpMKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMucmVxdWVzdFRpbWVyKTsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRUaW1lOiBmdW5jdGlvbiBnZXRUaW1lKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy51dGlscy5HRVQoIi90aW1lIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMudGltZSA9IHJlczsKCiAgICAgICAgX3RoaXMudGltZVRpY2soKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5pmC6ZaT5YCS5pW4CiAgICAvLyB0aW1lVGljaygpIHsKICAgIC8vICAgICB0aGlzLnRpbWUuUm91bmRSZW1haW5UaW1lLS0KICAgIC8vICAgICB0aGlzLm1pbnV0ZSA9IE1hdGguZmxvb3IodGhpcy50aW1lLlJvdW5kUmVtYWluVGltZSAvIDYwKQogICAgLy8gICAgIHRoaXMuc2Vjb25kID0gdGhpcy50aW1lLlJvdW5kUmVtYWluVGltZSAtIHRoaXMubWludXRlICogNjAKICAgIC8vICAgICBpZiAodGhpcy50aW1lLlJvdW5kUmVtYWluVGltZSA8PSAwKSB7CiAgICAvLyAgICAgICAgIHRoaXMudGltZS5Sb3VuZFJlbWFpblRpbWUgPSB0aGlzLnRpbWUuRHVyYXRpb24gKiA2MAogICAgLy8gICAgICAgICB0aGlzLnRpbWUuTm93Um91bmQrKwogICAgLy8gICAgIH0KICAgIC8vIH0KICAgIHVwZGF0ZVRpbWU6IGZ1bmN0aW9uIHVwZGF0ZVRpbWUoKSB7CiAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpOwogICAgICB0aGlzLnllYXIgPSBub3cuZ2V0RnVsbFllYXIoKTsKICAgICAgdGhpcy5tb250aCA9IG5vdy5nZXRNb250aCgpICsgMTsgLy8g5pyI5Lu95b6eIDAg6ZaL5aeL77yM5Zug5q2k6KaBICsxCgogICAgICB0aGlzLmRheSA9IG5vdy5nZXREYXRlKCk7CiAgICAgIHRoaXMuaG91ciA9IG5vdy5nZXRIb3VycygpOwogICAgICB0aGlzLm1pbnV0ZSA9IG5vdy5nZXRNaW51dGVzKCk7CiAgICAgIHRoaXMuc2Vjb25kID0gbm93LmdldFNlY29uZHMoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Timer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,YAAA,EAAA,IAFA;AAIA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,IAAA,EAAA,CALA;AAMA,MAAA,KAAA,EAAA,CANA;AAOA,MAAA,GAAA,EAAA,CAPA;AAQA,MAAA,IAAA,EAAA,CARA;AASA,MAAA,MAAA,EAAA,CATA;AAUA,MAAA,MAAA,EAAA;AAVA,KAAA;AAYA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,OAAA;AACA,SAAA,YAAA,GAAA,WAAA,CAAA,KAAA,OAAA,EAAA,KAAA,CAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,KAAA,QAAA,EAAA,IAAA,CAAA;AACA,SAAA,UAAA,GAJA,CAIA;AACA,GArBA;AAuBA,EAAA,aAvBA,2BAuBA;AACA,IAAA,aAAA,CAAA,KAAA,YAAA,CAAA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,GA1BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA;;AACA,QAAA,KAAA,CAAA,QAAA;AACA,OAHA;AAIA,KANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAA,UAnBA,wBAmBA;AACA,UAAA,GAAA,GAAA,IAAA,IAAA,EAAA;AACA,WAAA,IAAA,GAAA,GAAA,CAAA,WAAA,EAAA;AACA,WAAA,KAAA,GAAA,GAAA,CAAA,QAAA,KAAA,CAAA,CAHA,CAGA;;AACA,WAAA,GAAA,GAAA,GAAA,CAAA,OAAA,EAAA;AACA,WAAA,IAAA,GAAA,GAAA,CAAA,QAAA,EAAA;AACA,WAAA,MAAA,GAAA,GAAA,CAAA,UAAA,EAAA;AACA,WAAA,MAAA,GAAA,GAAA,CAAA,UAAA,EAAA;AACA;AA3BA;AA5BA,CAAA","sourcesContent":["<!-- 註解掉的部份是原本第幾輪的倒數計時器，現在改成顯示系統時間 -->\n\n<template>\n    <v-card-text class=\"text-center\" v-if=\"time !== null\">\n        <div v-if=\"time.Status === 'on'\">\n            <!-- <div>{{$t('timer.til_round_end',{round: time.NowRound})}}</div>\n            <p class=\"display-1 text--primary\">\n                {{minute}} {{$t('general.minute')}} {{second}} {{$t('general.second')}}\n            </p> -->\n            <p class=\"display-1 text--primary\">\n                系統時間\n            </p>\n            <p class=\"display-1 text--primary\">\n                {{year}} 年 {{month}} 月 {{day}} 日\n            </p>\n            <p class=\"display-1 text--primary\">\n                {{hour}} 時 {{minute}} 分 {{second}} 秒\n            </p>\n        </div>\n        <div v-else-if=\"time.Status === 'wait'\">\n            <p class=\"display-1 text--primary\">\n                {{$t('timer.not_begin')}}\n            </p>\n        </div>\n        <div v-else-if=\"time.Status === 'pause'\">\n            <p class=\"display-1 text--primary\">\n                {{$t('timer.pause')}}\n            </p>\n        </div>\n        <div v-else-if=\"time.Status === 'end'\">\n            <p class=\"display-1 text--primary\">\n                {{$t('timer.end')}}\n            </p>\n        </div>\n    </v-card-text>\n</template>\n\n<script>\n    export default {\n        name: \"Timer\",\n        data() {\n            return {\n                timer: null,\n                requestTimer: null,\n\n                time: null,\n                year: 0,\n                month: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            }\n        },\n        mounted() {\n            this.getTime()\n            this.requestTimer = setInterval(this.getTime, 10000)\n            this.timer = setInterval(this.timeTick, 1000)\n            this.updateTime()  // 初始化時先顯示一次當前時間\n        },\n\n        beforeDestroy() {\n            clearInterval(this.requestTimer)\n            clearInterval(this.timer)\n        },\n\n        methods: {\n            getTime() {\n                this.utils.GET(\"/time\").then(res => {\n                    this.time = res\n                    this.timeTick()\n                })\n            },\n\n            // 時間倒數\n            // timeTick() {\n            //     this.time.RoundRemainTime--\n            //     this.minute = Math.floor(this.time.RoundRemainTime / 60)\n            //     this.second = this.time.RoundRemainTime - this.minute * 60\n            //     if (this.time.RoundRemainTime <= 0) {\n            //         this.time.RoundRemainTime = this.time.Duration * 60\n            //         this.time.NowRound++\n            //     }\n            // }\n\n            updateTime() {\n                const now = new Date()\n                this.year = now.getFullYear()\n                this.month = now.getMonth() + 1  // 月份從 0 開始，因此要 +1\n                this.day = now.getDate()\n                this.hour = now.getHours()\n                this.minute = now.getMinutes()\n                this.second = now.getSeconds()\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}