{"remainingRequest":"/home/kali/fronted_player/node_modules/babel-loader/lib/index.js!/home/kali/fronted_player/node_modules/eslint-loader/index.js??ref--13-0!/home/kali/fronted_player/src/utils.js","dependencies":[{"path":"/home/kali/fronted_player/src/utils.js","mtime":1718176689359},{"path":"/home/kali/fronted_player/node_modules/cache-loader/dist/cjs.js","mtime":1718176688802},{"path":"/home/kali/fronted_player/node_modules/babel-loader/lib/index.js","mtime":1718176688789},{"path":"/home/kali/fronted_player/node_modules/eslint-loader/index.js","mtime":1718176688910}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLnRvLWpzb24iOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgYmFzZVVSTCA9ICcvYXBpJzsKCmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JykgewogIGJhc2VVUkwgPSAnaHR0cDovL2xvY2FsaG9zdDoxOTk5OS9hcGknOwp9CgpleHBvcnQgZGVmYXVsdCB7CiAgYmFzZVVSTDogYmFzZVVSTCwKICBHRVQ6IGZ1bmN0aW9uIEdFVCh1cmkpIHsKICAgIHZhciBhdXRoID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0cnVlOwogICAgdmFyIGJVUkwgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGJhc2VVUkw7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBheGlvcy5nZXQoYlVSTCArIHVyaSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYXV0aCA/IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpIDogJycKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJlc29sdmUocmVzLmRhdGEuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICByZWplY3QoZXJyKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIFBPU1Q6IGZ1bmN0aW9uIFBPU1QodXJpKSB7CiAgICB2YXIgcGF5bG9hZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgICB2YXIgYXV0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogdHJ1ZTsKICAgIHZhciBiVVJMID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBiYXNlVVJMOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgYXhpb3MucG9zdChiVVJMICsgdXJpLCBwYXlsb2FkLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBhdXRoID8gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykgOiAnJwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmVzb2x2ZShyZXMuZGF0YS5kYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHJlamVjdChlcnIpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgREVMRVRFOiBmdW5jdGlvbiBERUxFVEUodXJpKSB7CiAgICB2YXIgYXV0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdHJ1ZTsKICAgIHZhciBiVVJMID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBiYXNlVVJMOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgYXhpb3MuZGVsZXRlKGJVUkwgKyB1cmksIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGF1dGggPyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSA6ICcnCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXNvbHZlKHJlcy5kYXRhLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmVqZWN0KGVycik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKICBQVVQ6IGZ1bmN0aW9uIFBVVCh1cmkpIHsKICAgIHZhciBwYXlsb2FkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTsKICAgIHZhciBhdXRoID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB0cnVlOwogICAgdmFyIGJVUkwgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IGJhc2VVUkw7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBheGlvcy5wdXQoYlVSTCArIHVyaSwgcGF5bG9hZCwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYXV0aCA/IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpIDogJycKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJlc29sdmUocmVzLmRhdGEuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICByZWplY3QoZXJyKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIEZvcm1hdEZsb2F0OiBmdW5jdGlvbiBGb3JtYXRGbG9hdChudW1iZXIpIHsKICAgIHJldHVybiBudW1iZXIudG9GaXhlZCgyKTsKICB9LAogIEZvcm1hdEdvVGltZTogZnVuY3Rpb24gRm9ybWF0R29UaW1lKHRpbWVTdHJpbmcpIHsKICAgIHJldHVybiBuZXcgRGF0ZSh0aW1lU3RyaW5nLnNwbGl0KCcrJylbMF0ucmVwbGFjZSgnVCcsICcgJykpOwogIH0sCiAgRm9ybWF0VGltZTogZnVuY3Rpb24gRm9ybWF0VGltZSh0aW1lc3RhbXApIHsKICAgIHJldHVybiBuZXcgRGF0ZSgodGltZXN0YW1wICsgOCAqIDM2MDApICogMTAwMCkudG9KU09OKCkuc3Vic3RyKDAsIDE5KS5yZXBsYWNlKCdUJywgJyAnKTsKICB9Cn07"},{"version":3,"sources":["/home/kali/fronted_player/src/utils.js"],"names":["axios","baseURL","process","env","NODE_ENV","GET","uri","auth","bURL","Promise","resolve","reject","get","headers","localStorage","getItem","then","res","data","catch","err","POST","payload","post","DELETE","delete","PUT","put","FormatFloat","number","toFixed","FormatGoTime","timeString","Date","split","replace","FormatTime","timestamp","toJSON","substr"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nlet baseURL = '/api'\nif (process.env.NODE_ENV === 'development') {\n    baseURL = 'http://localhost:19999/api'\n}\n\nexport default {\n    baseURL: baseURL,\n\n    GET: (uri, auth = true, bURL = baseURL) => {\n        return new Promise((resolve, reject) => {\n            axios.get(bURL + uri, {\n                headers: {\n                    'Authorization': auth ? localStorage.getItem('token') : ''\n                }\n            }).then(res => {\n                resolve(res.data.data);\n            }).catch(err => {\n                reject(err);\n            });\n        })\n    },\n\n    POST: (uri, payload = {}, auth = true, bURL = baseURL) => {\n        return new Promise((resolve, reject) => {\n            axios.post(bURL + uri, payload, {\n                headers: {\n                    'Authorization': auth ? localStorage.getItem('token') : ''\n                }\n            }).then(res => {\n                resolve(res.data.data);\n            }).catch(err => {\n                reject(err);\n            });\n        })\n    },\n\n    DELETE: (uri, auth = true, bURL = baseURL) => {\n        return new Promise((resolve, reject) => {\n            axios.delete(bURL + uri, {\n                headers: {\n                    'Authorization': auth ? localStorage.getItem('token') : ''\n                }\n            }).then(res => {\n                resolve(res.data.data);\n            }).catch(err => {\n                reject(err);\n            });\n        })\n    },\n\n    PUT: (uri, payload = {}, auth = true, bURL = baseURL) => {\n        return new Promise((resolve, reject) => {\n            axios.put(bURL + uri, payload, {\n                headers: {\n                    'Authorization': auth ? localStorage.getItem('token') : ''\n                }\n            }).then(res => {\n                resolve(res.data.data);\n            }).catch(err => {\n                reject(err);\n            });\n        })\n    },\n\n    FormatFloat: (number) => {\n        return number.toFixed(2)\n    },\n\n    FormatGoTime: (timeString) => {\n        return new Date(timeString.split('+')[0].replace('T', ' '))\n    },\n\n    FormatTime: (timestamp) => {\n        return new Date((timestamp + 8 * 3600) * 1000).toJSON().substr(0, 19).replace('T', ' ');\n    }\n}"]}]}