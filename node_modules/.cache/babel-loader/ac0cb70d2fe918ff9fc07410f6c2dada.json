{"remainingRequest":"/home/kali/fronted_player/node_modules/babel-loader/lib/index.js!/home/kali/fronted_player/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/kali/fronted_player/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kali/fronted_player/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/fronted_player/src/components/SubmitFlag.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/fronted_player/src/components/SubmitFlag.vue","mtime":1725798633811},{"path":"/home/kali/fronted_player/node_modules/cache-loader/dist/cjs.js","mtime":1718176688802},{"path":"/home/kali/fronted_player/node_modules/babel-loader/lib/index.js","mtime":1718176688789},{"path":"/home/kali/fronted_player/node_modules/vuetify-loader/lib/loader.js","mtime":1718176689266},{"path":"/home/kali/fronted_player/node_modules/cache-loader/dist/cjs.js","mtime":1718176688802},{"path":"/home/kali/fronted_player/node_modules/vue-loader/lib/index.js","mtime":1718176689251}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgRXZlbnRCdXMgfSBmcm9tICcuLi9yb3V0ZXIuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlN1Ym1pdEZsYWciLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbmZvOiBudWxsLAogICAgICBpbnB1dEZsYWc6ICcnLAogICAgICBtZXNzYWdlOiAnJywKICAgICAgc25hY2tCYXJWaXNpYmxlOiBmYWxzZSwKICAgICAgc25hY2tCYXJDb2xvcjogJ3N1Y2Nlc3MnLAogICAgICBzdGFydFRpbWU6IG51bGwsCiAgICAgIGVuZFRpbWU6IG51bGwsCiAgICAgIGVsYXBzZWRUaW1lOiAnJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuZ2V0SW5mbygpOwogICAgRXZlbnRCdXMuJG9uKCdzdGFydC10aW1lJywgZnVuY3Rpb24gKHRpbWUpIHsKICAgICAgX3RoaXMuc3RhcnRUaW1lID0gdGltZTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0SW5mbzogZnVuY3Rpb24gZ2V0SW5mbygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLnV0aWxzLkdFVCgiL3RlYW0vaW5mbyIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi5pbmZvID0gcmVzOwogICAgICB9KTsKICAgIH0sCiAgICBzdWJtaXRGbGFnOiBmdW5jdGlvbiBzdWJtaXRGbGFnKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMucmVjb3JkU29sdmVUaW1lKCk7CiAgICAgIGF4aW9zLnBvc3QodGhpcy51dGlscy5iYXNlVVJMICsgJy9mbGFnJywgewogICAgICAgICdmbGFnJzogdGhpcy5pbnB1dEZsYWcsCiAgICAgICAgJ3RpbWUnOiB0aGlzLmVsYXBzZWRUaW1lCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHRoaXMuaW5mby5Ub2tlbgogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMzLmlucHV0RmxhZyA9ICcnOwogICAgICAgIF90aGlzMy5tZXNzYWdlID0gcmVzLmRhdGEuZGF0YTsKICAgICAgICBfdGhpczMuc25hY2tCYXJDb2xvciA9ICdzdWNjZXNzJzsKICAgICAgICBfdGhpczMuc25hY2tCYXJWaXNpYmxlID0gdHJ1ZTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIF90aGlzMy5tZXNzYWdlID0gZXJyLnJlc3BvbnNlLmRhdGEubXNnOwogICAgICAgIF90aGlzMy5zbmFja0JhckNvbG9yID0gJ2Vycm9yJzsKICAgICAgICBfdGhpczMuc25hY2tCYXJWaXNpYmxlID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0Q3VybENvbW1hbmQ6IGZ1bmN0aW9uIGdldEN1cmxDb21tYW5kKCkgewogICAgICAvLyBUaGUgY3VybCBjb21tYW5kIGlzIGRpZmZlcmVudCBpbiB3aW5kb3dzIGFuZCAqbml4IG9zLgogICAgICBpZiAobmF2aWdhdG9yLnBsYXRmb3JtID09PSAiV2luMzIiIHx8IG5hdmlnYXRvci5wbGF0Zm9ybSA9PT0gIldpbmRvd3MiKSB7CiAgICAgICAgcmV0dXJuICJjdXJsIC1YIFBPU1QgIi5jb25jYXQod2luZG93LmxvY2F0aW9uLm9yaWdpbiwgIi9hcGkvZmxhZyAtSCBcIkF1dGhvcml6YXRpb246ICIpLmNvbmNhdCh0aGlzLmluZm8uVG9rZW4sICJcIiAtZCBcInsgXFxcImZsYWdcXFwiOiBcXFwieW91cl9mbGFnX2hlcmVcXFwiIH1cIiIpOwogICAgICB9CgogICAgICByZXR1cm4gImN1cmwgLVggUE9TVCAiLmNvbmNhdCh3aW5kb3cubG9jYXRpb24ub3JpZ2luLCAiL2FwaS9mbGFnIC1IICdBdXRob3JpemF0aW9uOiAiKS5jb25jYXQodGhpcy5pbmZvLlRva2VuLCAiJyAtZCAneyBcImZsYWdcIjogXCJ5b3VyX2ZsYWdfaGVyZVwiIH0nIik7CiAgICB9LAogICAgcmVjb3JkU29sdmVUaW1lOiBmdW5jdGlvbiByZWNvcmRTb2x2ZVRpbWUoKSB7CiAgICAgIC8vIOiomOmMhOe1kOadn+aZgumWkwogICAgICB0aGlzLmVuZFRpbWUgPSBEYXRlLm5vdygpOyAvLyDnorrkv53mnIkgc3RhcnRUaW1lIOaJjemAsuihjOioiOeulwoKICAgICAgaWYgKHRoaXMuc3RhcnRUaW1lKSB7CiAgICAgICAgLy8g6KiI566X6Kej6aGM5pmC6ZaT77yM5Zau5L2N54K656eSCiAgICAgICAgdGhpcy5lbGFwc2VkVGltZSA9ICh0aGlzLmVuZFRpbWUgLSB0aGlzLnN0YXJ0VGltZSkgLyAxMDAwOyAvLyDpgJnoo6Hlj6/ku6XnmbzpgIHoq4vmsYLlsIcgZWxhcHNlZFRpbWUg5pu05paw5Yiw5b6M56uvCgogICAgICAgIGNvbnNvbGUubG9nKCJFbGFwc2VkIHRpbWU6ICIuY29uY2F0KHRoaXMuZWxhcHNlZFRpbWUsICIgc2Vjb25kcyIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdTdGFydCB0aW1lIGlzIG5vdCBhdmFpbGFibGUuJyk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["SubmitFlag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,eAAA,EAAA,KALA;AAMA,MAAA,aAAA,EAAA,SANA;AAOA,MAAA,SAAA,EAAA,IAPA;AAQA,MAAA,OAAA,EAAA,IARA;AASA,MAAA,WAAA,EAAA;AATA,KAAA;AAAA,GAHA;AAeA,EAAA,OAfA,qBAeA;AAAA;;AACA,SAAA,OAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,YAAA,EAAA,UAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,KAFA;AAGA,GApBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA,OAFA;AAGA,KALA;AAMA,IAAA,UANA,wBAMA;AAAA;;AACA,WAAA,eAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,OAAA,GAAA,OAAA,EAAA;AACA,gBAAA,KAAA,SADA;AAEA,gBAAA,KAAA;AAFA,OAAA,EAGA;AACA,QAAA,OAAA,EAAA;AACA,2BAAA,KAAA,IAAA,CAAA;AADA;AADA,OAHA,EAOA,IAPA,CAOA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,SAAA;AACA,QAAA,MAAA,CAAA,eAAA,GAAA,IAAA;AACA,OAZA,EAYA,KAZA,CAYA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,OAAA;AACA,QAAA,MAAA,CAAA,eAAA,GAAA,IAAA;AACA,OAhBA;AAiBA,KAzBA;AA0BA,IAAA,cA1BA,4BA0BA;AACA;AACA,UAAA,SAAA,CAAA,QAAA,KAAA,OAAA,IAAA,SAAA,CAAA,QAAA,KAAA,SAAA,EAAA;AACA,sCAAA,MAAA,CAAA,QAAA,CAAA,MAAA,2CAAA,KAAA,IAAA,CAAA,KAAA;AACA;;AACA,oCAAA,MAAA,CAAA,QAAA,CAAA,MAAA,0CAAA,KAAA,IAAA,CAAA,KAAA;AACA,KAhCA;AAiCA,IAAA,eAjCA,6BAiCA;AACA;AACA,WAAA,OAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAFA,CAIA;;AACA,UAAA,KAAA,SAAA,EAAA;AACA;AACA,aAAA,WAAA,GAAA,CAAA,KAAA,OAAA,GAAA,KAAA,SAAA,IAAA,IAAA,CAFA,CAIA;;AACA,QAAA,OAAA,CAAA,GAAA,yBAAA,KAAA,WAAA;AACA,OANA,MAMA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,8BAAA;AACA;AACA;AA/CA;AAtBA,CAAA","sourcesContent":["<template>\n    <v-card class=\"mx-auto\" v-if=\"info !== null\">\n        <v-snackbar v-model=\"snackBarVisible\" :color=\"snackBarColor\" :timeout=\"3000\" :top=\"true\">{{ message }}\n        </v-snackbar>\n\n        <v-card-title>\n            <span style=\"margin-right: 20px;\">{{$t('flag.submit_flag')}}</span>\n            <v-text-field\n                    @keyup.enter.native=\"submitFlag\"\n                    v-model=\"inputFlag\"\n                    :label=\"$t('flag.input_your_flag')\"\n                    clearable\n            ></v-text-field>\n            <v-btn style=\"margin-left: 20px;\" @click=\"submitFlag\">\n                {{$t('flag.submit')}}\n            </v-btn>\n        </v-card-title>\n        <v-card-text>\n            <h2>POST <code style=\"background-color: #1c1c1c\">/flag</code></h2><br>\n            <span><b>Header</b></span><br>\n            <span>Content-Type: application/json</span><br>\n            <span>Authorization: {{info.Token}}</span><br>\n            <p><b>Body</b></p>\n            <code class=\"pa-3\" style=\"width: 100%; background-color: #1c1c1c; color: rgba(255, 255, 255, 0.7);\">{\"flag\":\n                \"your_flag_here\"}</code>\n            <br><br>\n            <v-divider></v-divider>\n            <br>\n            <p>\n                <code class=\"pa-3\" style=\"width: 100%; background-color: #1c1c1c; color: rgba(255, 255, 255, 0.7);\">{{getCurlCommand()}}</code>\n            </p>\n        </v-card-text>\n    </v-card>\n</template>\n\n<script>\n    import axios from \"axios\";\n    import { EventBus } from '../router.js';\n\n    export default {\n        name: \"SubmitFlag\",\n\n        data: () => ({\n            info: null,\n            inputFlag: '',\n\n            message: '',\n            snackBarVisible: false,\n            snackBarColor: 'success',\n            startTime: null,\n            endTime: null,\n            elapsedTime: '',\n        }),\n\n        mounted() {\n            this.getInfo()\n            EventBus.$on('start-time', (time) => {\n            this.startTime = time;\n            });\n        },\n\n        methods: {\n            getInfo() {\n                this.utils.GET(\"/team/info\").then(res => {\n                    this.info = res\n                })\n            },\n            submitFlag() {\n                this.recordSolveTime();\n                axios.post(this.utils.baseURL + '/flag', {\n                    'flag': this.inputFlag,\n                    'time': this.elapsedTime\n                }, {\n                    headers: {\n                        'Authorization': this.info.Token\n                    }\n                }).then(res => {\n                    this.inputFlag = ''\n                    this.message = res.data.data\n                    this.snackBarColor = 'success'\n                    this.snackBarVisible = true\n                }).catch(err => {\n                    this.message = err.response.data.msg\n                    this.snackBarColor = 'error'\n                    this.snackBarVisible = true\n                });\n            },\n            getCurlCommand() {\n                // The curl command is different in windows and *nix os.\n                if ((navigator.platform === \"Win32\") || (navigator.platform === \"Windows\")) {\n                    return `curl -X POST ${window.location.origin}/api/flag -H \"Authorization: ${this.info.Token}\" -d \"{ \\\\\"flag\\\\\": \\\\\"your_flag_here\\\\\" }\"`\n                }\n                return `curl -X POST ${window.location.origin}/api/flag -H 'Authorization: ${this.info.Token}' -d '{ \"flag\": \"your_flag_here\" }'`\n            },\n            recordSolveTime() {\n                // 記錄結束時間\n                this.endTime = Date.now();\n\n                // 確保有 startTime 才進行計算\n                if (this.startTime) {\n                    // 計算解題時間，單位為秒\n                    this.elapsedTime = (this.endTime - this.startTime) / 1000;\n\n                    // 這裡可以發送請求將 elapsedTime 更新到後端\n                    console.log(`Elapsed time: ${this.elapsedTime} seconds`);\n                } else {\n                    console.error('Start time is not available.');\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}