{"remainingRequest":"/home/osboxes/Cardinal_frontend/node_modules/babel-loader/lib/index.js!/home/osboxes/Cardinal_frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/osboxes/Cardinal_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/osboxes/Cardinal_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/osboxes/Cardinal_frontend/src/views/Rank.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/osboxes/Cardinal_frontend/src/views/Rank.vue","mtime":1706256252233},{"path":"/home/osboxes/Cardinal_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1706256287886},{"path":"/home/osboxes/Cardinal_frontend/node_modules/babel-loader/lib/index.js","mtime":1706256287673},{"path":"/home/osboxes/Cardinal_frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1706256286671},{"path":"/home/osboxes/Cardinal_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1706256287886},{"path":"/home/osboxes/Cardinal_frontend/node_modules/vue-loader/lib/index.js","mtime":1706256337311}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJSYW5rIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGltZXI6IG51bGwsCiAgICAgIHJhbmtIZWFkZXI6IG51bGwsCiAgICAgIHJhbmtMaXN0OiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0UmFuaygpOwogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKHRoaXMuZ2V0UmFuaywgNTAwMCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFJhbms6IGZ1bmN0aW9uIGdldFJhbmsoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnV0aWxzLkdFVCgnL3RlYW0vcmFuaycpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnJhbmtIZWFkZXIgPSByZXMuVGl0bGU7CiAgICAgICAgX3RoaXMucmFua0xpc3QgPSByZXMuUmFuazsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Rank.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAAA,GAHA;AASA,EAAA,OATA,qBASA;AACA,SAAA,OAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,KAAA,OAAA,EAAA,IAAA,CAAA;AACA,GAZA;AAcA,EAAA,aAdA,2BAcA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,GAhBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,GAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA;AACA,OAHA;AAIA;AANA;AAlBA,CAAA","sourcesContent":["<template>\n    <v-container>\n        <v-simple-table dark v-if=\"rankList !== null\">\n            <thead>\n            <tr>\n                <th class=\"text-center\">{{$t('rank.rank')}}</th>\n                <th class=\"text-center\">{{$t('rank.team')}}</th>\n                <th class=\"text-center\">{{$t('rank.score')}}</th>\n                <th class=\"text-center\" v-bind:key=\"index\" v-for=\"(header,index) in this.rankHeader\">\n                    {{header}}\n                </th>\n            </tr>\n            </thead>\n            <tbody class=\"text-center\">\n            <tr v-for=\"(item, key) in this.rankList\" :key=\"item.ID\">\n                <td>{{key + 1}}</td>\n                <td>{{item.TeamName}}</td>\n                <td>{{utils.FormatFloat(item.Score)}}</td>\n                <td v-bind:key=\"index\" v-for=\"(gameBox, index) in item.GameBoxStatus\">\n                    <v-icon color=\"green lighten-2\" v-if=\"!gameBox.IsDown && !gameBox.IsAttacked\">mdi-check-circle</v-icon>\n                    <v-icon color=\"yellow lighten-2\" v-if=\"gameBox.IsDown\">mdi-file-cancel</v-icon>\n                    <v-icon color=\"red lighten-2\" v-if=\"gameBox.IsAttacked\">mdi-ghost</v-icon>\n                </td>\n            </tr>\n            </tbody>\n        </v-simple-table>\n        <v-skeleton-loader v-else class=\"mx-auto\" type=\"article\"></v-skeleton-loader>\n    </v-container>\n</template>\n\n<script>\n    export default {\n        name: \"Rank\",\n\n        data: () => ({\n            timer: null,\n            rankHeader: null,\n            rankList: null\n        }),\n\n        mounted() {\n            this.getRank()\n            this.timer = setInterval(this.getRank, 5000)\n        },\n\n        beforeDestroy() {\n            clearInterval(this.timer)\n        },\n\n        methods: {\n            getRank() {\n                this.utils.GET('/team/rank').then(res => {\n                    this.rankHeader = res.Title\n                    this.rankList = res.Rank\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .logo {\n        float: left;\n        width: 50px;\n        height: 50px;\n    }\n</style>"],"sourceRoot":"src/views"}]}